import { Address } from '../../base';
import { Claim } from './claim';
import { ClaimTypes } from './types';
/**
 * Verifies a claim made by an account, i.e. whether a claim can be verified to be correct
 * @param claim The claim to verify
 * @param address The address that is making the claim
 * @param metadataURLGetter A function that can retrieve the metadata URL for a given account address,
 *                          should be Accounts.getMetadataURL()
 * @returns If valid, returns undefined. If invalid or unable to verify, returns a string with the error
 */
export declare function verifyClaim(claim: Claim, address: string, metadataURLGetter: MetadataURLGetter): Promise<string | undefined>;
/**
 * A function that can asynchronously fetch the metadata URL for an account address
 * Should virtually always be Accounts#getMetadataURL
 */
export declare type MetadataURLGetter = (address: Address) => Promise<string>;
export declare const verifyAccountClaim: (claim: {
    type: ClaimTypes.ACCOUNT;
    timestamp: number;
    address: string;
    publicKey: string | undefined;
}, address: string, metadataURLGetter: MetadataURLGetter) => Promise<string | undefined>;
