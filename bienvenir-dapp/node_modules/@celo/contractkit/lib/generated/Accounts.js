"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ABI = [
    {
        constant: true,
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'registryAddress', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'address' }],
        name: 'authorizedBy',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'signer', type: 'address' },
        ],
        name: 'AttestationSignerAuthorized',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'signer', type: 'address' },
        ],
        name: 'VoteSignerAuthorized',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'signer', type: 'address' },
        ],
        name: 'ValidatorSignerAuthorized',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'oldSigner', type: 'address' },
        ],
        name: 'AttestationSignerRemoved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'oldSigner', type: 'address' },
        ],
        name: 'VoteSignerRemoved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'oldSigner', type: 'address' },
        ],
        name: 'ValidatorSignerRemoved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'dataEncryptionKey', type: 'bytes' },
        ],
        name: 'AccountDataEncryptionKeySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'name', type: 'string' },
        ],
        name: 'AccountNameSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'metadataURL', type: 'string' },
        ],
        name: 'AccountMetadataURLSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'walletAddress', type: 'address' },
        ],
        name: 'AccountWalletAddressSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'account', type: 'address' }],
        name: 'AccountCreated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'registryAddress', type: 'address' }],
        name: 'RegistrySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'previousOwner', type: 'address' },
            { indexed: true, name: 'newOwner', type: 'address' },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        constant: false,
        inputs: [{ name: 'registryAddress', type: 'address' }],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'name', type: 'string' },
            { name: 'dataEncryptionKey', type: 'bytes' },
            { name: 'walletAddress', type: 'address' },
        ],
        name: 'setAccount',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'createAccount',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'name', type: 'string' }],
        name: 'setName',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'walletAddress', type: 'address' }],
        name: 'setWalletAddress',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'dataEncryptionKey', type: 'bytes' }],
        name: 'setAccountDataEncryptionKey',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'metadataURL', type: 'string' }],
        name: 'setMetadataURL',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'signer', type: 'address' },
            { name: 'v', type: 'uint8' },
            { name: 'r', type: 'bytes32' },
            { name: 's', type: 'bytes32' },
        ],
        name: 'authorizeVoteSigner',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'signer', type: 'address' },
            { name: 'v', type: 'uint8' },
            { name: 'r', type: 'bytes32' },
            { name: 's', type: 'bytes32' },
        ],
        name: 'authorizeValidatorSigner',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'signer', type: 'address' },
            { name: 'v', type: 'uint8' },
            { name: 'r', type: 'bytes32' },
            { name: 's', type: 'bytes32' },
            { name: 'ecdsaPublicKey', type: 'bytes' },
        ],
        name: 'authorizeValidatorSignerWithPublicKey',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'signer', type: 'address' },
            { name: 'v', type: 'uint8' },
            { name: 'r', type: 'bytes32' },
            { name: 's', type: 'bytes32' },
        ],
        name: 'authorizeAttestationSigner',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'removeVoteSigner',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'removeValidatorSigner',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'removeAttestationSigner',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'signer', type: 'address' }],
        name: 'attestationSignerToAccount',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'signer', type: 'address' }],
        name: 'validatorSignerToAccount',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'signer', type: 'address' }],
        name: 'voteSignerToAccount',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'signer', type: 'address' }],
        name: 'signerToAccount',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getVoteSigner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getValidatorSigner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getAttestationSigner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'hasAuthorizedVoteSigner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'hasAuthorizedValidatorSigner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'hasAuthorizedAttestationSigner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getName',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getMetadataURL',
        outputs: [{ name: '', type: 'string' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'accountsToQuery', type: 'address[]' }],
        name: 'batchGetMetadataURL',
        outputs: [
            { name: '', type: 'uint256[]' },
            { name: '', type: 'bytes' },
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getDataEncryptionKey',
        outputs: [{ name: '', type: 'bytes' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getWalletAddress',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'isAccount',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'signer', type: 'address' }],
        name: 'isAuthorizedSigner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
];
function newAccounts(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newAccounts = newAccounts;
//# sourceMappingURL=Accounts.js.map