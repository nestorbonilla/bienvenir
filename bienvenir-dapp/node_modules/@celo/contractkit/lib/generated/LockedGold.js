"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ABI = [
    {
        constant: true,
        inputs: [],
        name: 'initialized',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'unlockingPeriod',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: '', type: 'uint256' }],
        name: 'slashingWhitelist',
        outputs: [{ name: '', type: 'bytes32' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'registry',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'isOwner',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'registryAddress', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'totalNonvoting',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        anonymous: false,
        inputs: [{ indexed: false, name: 'period', type: 'uint256' }],
        name: 'UnlockingPeriodSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
        ],
        name: 'GoldLocked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
            { indexed: false, name: 'available', type: 'uint256' },
        ],
        name: 'GoldUnlocked',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'account', type: 'address' },
            { indexed: false, name: 'value', type: 'uint256' },
        ],
        name: 'GoldWithdrawn',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'slasherIdentifier', type: 'string' }],
        name: 'SlasherWhitelistAdded',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'slasherIdentifier', type: 'string' }],
        name: 'SlasherWhitelistRemoved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'slashed', type: 'address' },
            { indexed: false, name: 'penalty', type: 'uint256' },
            { indexed: true, name: 'reporter', type: 'address' },
            { indexed: false, name: 'reward', type: 'uint256' },
        ],
        name: 'AccountSlashed',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [{ indexed: true, name: 'registryAddress', type: 'address' }],
        name: 'RegistrySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, name: 'previousOwner', type: 'address' },
            { indexed: true, name: 'newOwner', type: 'address' },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        constant: true,
        inputs: [{ name: 'slasher', type: 'address' }],
        name: 'isSlasher',
        outputs: [{ name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'registryAddress', type: 'address' },
            { name: '_unlockingPeriod', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'value', type: 'uint256' }],
        name: 'setUnlockingPeriod',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'lock',
        outputs: [],
        payable: true,
        stateMutability: 'payable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'account', type: 'address' },
            { name: 'value', type: 'uint256' },
        ],
        name: 'incrementNonvotingAccountBalance',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'account', type: 'address' },
            { name: 'value', type: 'uint256' },
        ],
        name: 'decrementNonvotingAccountBalance',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'value', type: 'uint256' }],
        name: 'unlock',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'index', type: 'uint256' },
            { name: 'value', type: 'uint256' },
        ],
        name: 'relock',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'index', type: 'uint256' }],
        name: 'withdraw',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getTotalLockedGold',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getNonvotingLockedGold',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getAccountTotalLockedGold',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getAccountNonvotingLockedGold',
        outputs: [{ name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ name: 'account', type: 'address' }],
        name: 'getPendingWithdrawals',
        outputs: [
            { name: '', type: 'uint256[]' },
            { name: '', type: 'uint256[]' },
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getSlashingWhitelist',
        outputs: [{ name: '', type: 'bytes32[]' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ name: 'slasherIdentifier', type: 'string' }],
        name: 'addSlasher',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'slasherIdentifier', type: 'string' },
            { name: 'index', type: 'uint256' },
        ],
        name: 'removeSlasher',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { name: 'account', type: 'address' },
            { name: 'penalty', type: 'uint256' },
            { name: 'reporter', type: 'address' },
            { name: 'reward', type: 'uint256' },
            { name: 'lessers', type: 'address[]' },
            { name: 'greaters', type: 'address[]' },
            { name: 'indices', type: 'uint256[]' },
        ],
        name: 'slash',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
function newLockedGold(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newLockedGold = newLockedGold;
//# sourceMappingURL=LockedGold.js.map